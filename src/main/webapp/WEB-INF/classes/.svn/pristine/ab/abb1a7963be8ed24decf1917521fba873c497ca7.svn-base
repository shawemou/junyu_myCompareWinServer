package com.my.validate;

import org.json.JSONException;
import org.json.JSONObject;

import com.my.bean.VisitInfoBean;
import com.my.common.EnumInstance;
import com.my.common.ReturnBean;
import com.my.common.EnumInstance.EReturn;
import com.my.util.Check;
import com.my.util.Log4jUtil;

/**
 * @ClassName: MainValidate 
 * @Description: 入参验证
 * @author lulinlin
 * @date 2017-11-24 上午11:15:25 
 *
 */
public class MainValidate {

	/**
	 * 常用入参验证
	 */
	public static boolean validate(String strJson, VisitInfoBean viBean, ReturnBean bean){
		if(Check.IsStringNULL(strJson)){
			bean.setCode(EReturn.RT_NotMatch_Format);
			return false;
		}
		
		try {
			JSONObject json = new JSONObject(strJson);
			if( !json.has("type") || Check.IsStringNULL(json.getString("type"))){
				bean.setCode(EReturn.RT_NotMatch_type_null);
				return false;
			}else{
				viBean.setType(json.getString("type"));
			}
		} catch (JSONException e) {
			Log4jUtil.log.error("入参strJson解析失败", e);
			bean.setCode(EReturn.RT_NotMatch_Format_Json);
			return false;
		}
		
		if( viBean.getType().equals(EnumInstance.loginType) ){
			return LoginValidate.vali(strJson, viBean, bean);
		}else if( viBean.getType().equals(EnumInstance.modifyPwdType) ){
			return ModifyPwdValidate.vali(strJson, viBean, bean);
		}else if( viBean.getType().equals(EnumInstance.compareType) ){
			return CompareValidate.vali(strJson, viBean, bean);
		}else{
			bean.setCode(EReturn.RT_NotMatch_Service_null);
			return false;
		}
	}
}
